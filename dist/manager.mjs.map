{"version":3,"sources":["../src/manager.ts","../src/constants.ts","../src/Tab.tsx","../src/components/TabContent.tsx","../src/components/CommentsList/CommentsList.tsx","../src/UI/CommentsWrapper/CommentsWrapper.tsx","../src/UI/Comment/Comment.tsx","../src/UI/Comment/Comment.styles.ts","../src/UI/CommentsWrapper/CommentsWrapper.styles.ts","../src/UI/Spinner/Spinner.tsx","../src/UI/images/ChatSVG.tsx","../src/UI/images/CommunicationErrorSVG.tsx","../src/components/CommentsList/CommentsList.styles.ts","../src/components/CommentBox/CommentBox.tsx","../src/UI/FieldGroup/FieldGroup.tsx","../src/UI/FieldGroup/FieldGroup.styles.ts","../src/UI/Textbox/Textbox.tsx","../src/UI/Textarea/Textarea.tsx","../src/hooks/useComment.tsx","../src/services/supabase/instance.ts","../src/services/supabase/data.ts","../src/services/supabase/service.ts","../src/utils/date.ts","../src/transformers/comment.ts","../src/components/CommentBox/CommentFormSchema.ts","../src/components/CommentBox/CommentBox.styles.ts","../src/hooks/useComments.tsx","../src/components/TabContent.styles.ts"],"names":["addons","types","ADDON_ID","TAB_ID","PARAM_KEY","EVENTS","React","useParameter","useStorybookState","useEffect","useRef","styled","CommentContainer","theme","CommentText","CommentCreatedAt","Comment","props","comment","author","commentText","createdAt","CommentsWrapperContainer","CommentWrapper","CommentsWrapper","comments","keyframes","ldsDualRingAnimation","SpinnerDiv","Spinner","ChatSVG","CommunicationErrorSVG","SpinnerContainer","ImageContainer","CommentsList","isLoading","error","useState","ValidationError","FieldGroupContainer","FieldGroup","name","label","children","Textbox","Textarea","useMemo","createClient","SupabaseInstance","url","secret","Comment_V1_Data","id","columnName","value","Comment_V1_Service","data","useComment","paramData","service","setIsLoading","setError","response","formatRawDateToFriendlyDate","date","transformComment","object","string","commentSchema","validateComment","CommentBoxFormContainer","CommentButtonsSectionContainer","CommentBox","storyId","setComment","formRef","saveComment","formErrors","setFormErrors","e","elements","commentData","path","message","useComments","setComments","fetchComments","transformComments","TabWrapper","TabInner","TabContent","isHiddenContainerDiv","node","shouldStop","container","Tab","active","state","viewMode"],"mappings":"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","sourcesContent":["import { addons, types } from \"@storybook/manager-api\";\nimport { ADDON_ID, TAB_ID } from \"./constants\";\nimport { Tab } from \"./Tab\";\n\n/**\n * Note: if you want to use JSX in this file, rename it to `manager.tsx`\n * and update the entry prop in tsup.config.ts to use \"src/manager.tsx\",\n */\n\n// Register the addon\naddons.register(ADDON_ID, () => {\n\n  // Register the tab\n  addons.add(TAB_ID, {\n    type: types.TAB,\n    title: \"Discussion\",\n    //👇 Checks the current route for the story\n    route: ({ storyId }) => `/discussion/${storyId}`,\n    //👇 Shows the Tab UI element in myaddon view mode\n    match: ({ viewMode }) => viewMode === \"discussion\",\n    render: Tab,\n  });\n});\n","export const ADDON_ID = \"storybook/discussion\";\nexport const TAB_ID = `${ADDON_ID}/tab`;\nexport const PARAM_KEY = \"discussion\";\n\nexport const EVENTS = {\n  RESULT: `${ADDON_ID}/result`,\n  REQUEST: `${ADDON_ID}/request`,\n  CLEAR: `${ADDON_ID}/clear`,\n};\n","import React from \"react\";\nimport { useParameter, useStorybookState } from \"@storybook/manager-api\";\n\nimport { TabContent } from \"@components/TabContent\";\nimport { IDiscussionParameters } from \"@interfaces/supabase\";\n\nimport { PARAM_KEY } from \"./constants\";\n\ninterface TabProps {\n  active: boolean;\n}\n\nexport const Tab: React.FC<TabProps> = ({ active }) => {\n  const state = useStorybookState();\n  const paramData = useParameter<IDiscussionParameters | null>(PARAM_KEY, null);\n\n  const { storyId } = state;\n\n  return active && paramData ? <TabContent storyId={storyId} paramData={paramData} /> : null;\n};\n","import React, { useEffect, useRef } from \"react\";\n\nimport { CommentsList } from \"@components/CommentsList\";\nimport { CommentBox } from \"@components/CommentBox\";\n\nimport { IComment } from \"@interfaces/comment\";\nimport { IDiscussionParameters } from \"@interfaces/supabase\";\nimport { useComments } from \"@hooks/useComments\";\n\nimport { TabWrapper, TabInner } from \"./TabContent.styles\";\n\ninterface TabContentProps {\n  storyId: string;\n  paramData: IDiscussionParameters;\n}\n\nexport const TabContent: React.FC<TabContentProps> = ({\n  storyId,\n  paramData,\n}) => {\n  const { isLoading, error, comments, setComment } = useComments(\n    storyId,\n    paramData\n  );\n\n  // https://github.com/storybookjs/storybook/issues/25322\n  // There is an issue in latest storybook which will render a tab, but not make\n  // it visible this hack will make it visible by walking up the DOM tree until\n  // it finds a specific div and set it to be visible\n\n  const isHiddenContainerDiv = (node: HTMLElement) => {\n    if (node.tagName === \"DIV\" && node.hasAttribute(\"hidden\")) {\n      return true;\n    }\n    return false;\n  };\n\n  const shouldStop = (node: HTMLElement) => {\n    return node.hasAttribute(\"role\") && node.getAttribute(\"role\") === \"main\";\n  };\n\n  const container = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTimeout(() => {\n      let node: HTMLDivElement | HTMLElement = container.current;\n      while (!shouldStop(node)) {\n        if (isHiddenContainerDiv(node)) {\n          node.removeAttribute(\"hidden\");\n          break;\n        }\n\n        node = node.parentElement;\n      }\n    }, 10);\n  }, []);\n\n  return (\n    <TabWrapper ref={container}>\n      <TabInner>\n        <CommentsList isLoading={isLoading} error={error} comments={comments} />\n        <br />\n        <hr />\n        <CommentBox\n          storyId={storyId}\n          setComment={(comment: IComment) => setComment(comment)}\n          paramData={paramData}\n        />\n      </TabInner>\n    </TabWrapper>\n  );\n};\n","import React from \"react\";\nimport { PostgrestError } from \"@supabase/supabase-js\";\n\nimport { CommentsWrapper } from \"@UI/CommentsWrapper\";\nimport { Spinner } from \"@UI/Spinner\";\n\nimport { ChatSVG } from \"@UI/images/ChatSVG\";\nimport { CommunicationErrorSVG } from \"@UI/images/CommunicationErrorSVG\";\n\nimport { IComment } from \"@interfaces/comment\";\n\nimport { ImageContainer, SpinnerContainer } from \"./CommentsList.styles\";\n\ntype TCommentBoxProps = {\n  isLoading: boolean;\n  error: PostgrestError | null;\n  comments: Array<IComment>;\n};\n\nexport function CommentsList(props: TCommentBoxProps) {\n  const { isLoading, error, comments } = props;\n\n  if (isLoading) {\n    return (\n      <SpinnerContainer>\n        <Spinner />\n      </SpinnerContainer>\n    );\n  }\n\n  if (!isLoading && error) {\n    return (\n      <ImageContainer>\n        <CommunicationErrorSVG />\n        <h3>Something went wrong, while loading comments!</h3>\n      </ImageContainer>\n    );\n  }\n\n  if (!isLoading && comments.length === 0) {\n    return (\n      <ImageContainer>\n        <ChatSVG />\n        <h3>No one has written his comment yet! Be the first one!</h3>\n      </ImageContainer>\n    );\n  }\n\n  return <CommentsWrapper comments={comments} />;\n}\n","import React from \"react\";\n\nimport { Comment } from \"@UI/Comment\";\n\nimport { IComment } from \"@interfaces/comment\";\n\nimport {\n  CommentsWrapperContainer,\n  CommentWrapper,\n} from \"./CommentsWrapper.styles\";\n\ntype TCommentsWrapperProps = {\n  comments: Array<IComment>;\n};\n\nexport function CommentsWrapper(props: TCommentsWrapperProps) {\n  const { comments } = props;\n\n  return (\n    <CommentsWrapperContainer>\n      {comments.map((comment) => (\n        <CommentWrapper key={comment.id}>\n          <Comment comment={comment} />\n        </CommentWrapper>\n      ))}\n    </CommentsWrapperContainer>\n  );\n}\n","import React from \"react\";\n\nimport { IComment } from \"@interfaces/comment\";\n\nimport {\n  CommentContainer,\n  CommentText,\n  CommentCreatedAt,\n} from \"./Comment.styles\";\n\ntype TCommentProps = {\n  comment: IComment;\n};\n\nexport function Comment(props: TCommentProps) {\n  const { comment } = props;\n  const { author, comment: commentText, createdAt } = comment;\n\n  return (\n    <CommentContainer>\n      <strong>{author}</strong>\n      <CommentText>\n        <em>{commentText}</em>\n      </CommentText>\n      <CommentCreatedAt>{createdAt}</CommentCreatedAt>\n    </CommentContainer>\n  );\n}\n","import { styled } from \"@storybook/theming\";\n\nconst CommentContainer = styled.span(({ theme }) => ({\n  display: \"grid\",\n  flexDirection: \"column\",\n  margin: 0,\n  padding: \"0.5rem\",\n  borderRadius: theme.appBorderRadius,\n  backgroundColor: theme.background.app,\n  color: theme.color.primary,\n}));\n\nconst CommentText = styled.span({\n  paddingInlineStart: \"1rem\",\n  margin: \"1rem 0\",\n  display: \"block\",\n});\n\nconst CommentCreatedAt = styled.small({\n  textAlign: \"end\",\n});\n\nexport { CommentContainer, CommentText, CommentCreatedAt };\n","import { styled } from \"@storybook/theming\";\n\nconst CommentsWrapperContainer = styled.ul({\n  margin: 0,\n  padding: 0,\n  listStyle: \"none\",\n});\n\nconst CommentWrapper = styled.li({\n  marginBottom: \"0.5rem\",\n});\n\nexport { CommentsWrapperContainer, CommentWrapper };\n","import React from \"react\";\nimport { styled, keyframes } from \"@storybook/theming\";\n\nconst ldsDualRingAnimation = keyframes`\n 0% { transform: rotate(0deg); }\n 100% { transform: rotate(360deg); }\n`;\n\nconst SpinnerDiv = styled.div(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"80px\",\n  height: \"80px\",\n  \":after\": {\n    content: `\" \"`,\n    display: \"block\",\n    width: \"64px\",\n    height: \"64px\",\n    margin: \"8px\",\n    borderRadius: \"50%\",\n    border: `6px solid ${theme.color.primary}`,\n    borderColor: `${theme.color.primary} transparent ${theme.color.primary} transparent`,\n    animation: `${ldsDualRingAnimation} 1.2s linear infinite`,\n  },\n}));\n\nexport function Spinner() {\n  return <SpinnerDiv />;\n}\n","import React from \"react\";\n\nexport function ChatSVG() {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"128.000000pt\"\n      height=\"128.000000pt\"\n      viewBox=\"0 0 128.000000 128.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        transform=\"translate(0.000000,128.000000) scale(0.100000,-0.100000)\"\n        fill=\"#000000\"\n        stroke=\"none\"\n      >\n        <path\n          d=\"M523 1260 c-56 -34 -63 -60 -63 -240 l0 -160 -24 0 c-26 0 -51 -24\n   -41 -40 4 -6 63 -10 156 -10 156 0 199 -9 213 -45 3 -9 6 -115 6 -235 0 -282\n   12 -263 -177 -270 l-139 -5 -52 -37 c-29 -21 -56 -38 -60 -38 -5 0 -14 18 -21\n   40 l-12 40 -95 0 c-99 0 -146 13 -158 45 -12 32 -6 449 7 466 20 26 53 39 101\n   39 49 0 65 12 45 37 -17 20 -115 13 -152 -12 -51 -33 -57 -64 -57 -299 0 -302\n   8 -317 178 -326 l94 -5 18 -45 c20 -51 32 -58 65 -36 23 15 27 15 52 -1 21\n   -14 56 -19 157 -23 l131 -5 70 -49 c78 -55 91 -54 112 11 l14 41 93 4 c101 4\n   131 16 163 65 16 23 18 56 21 247 l2 220 28 12 c15 6 38 24 52 39 25 27 25 27\n   28 260 3 260 0 278 -61 315 -30 19 -52 20 -347 20 -295 0 -317 -1 -347 -20z\n   m661 -41 c43 -20 47 -50 44 -277 -4 -260 5 -245 -146 -252 l-107 -5 -19 -42\n   -19 -42 -58 42 c-50 35 -59 46 -59 71 l0 31 52 -3 c106 -6 215 82 233 188 16\n   93 -43 202 -129 241 -50 23 -134 24 -184 3 -103 -43 -161 -162 -129 -266 l15\n   -48 -84 0 -84 0 1 153 c0 83 4 160 8 171 16 42 41 45 348 46 196 0 300 -4 317\n   -11z m-228 -98 c56 -25 87 -71 92 -138 5 -64 -9 -103 -54 -143 -67 -58 -157\n   -60 -224 -4 -42 36 -60 75 -60 131 0 66 33 120 89 150 53 28 102 29 157 4z\n   m154 -709 c0 -269 8 -255 -147 -260 l-105 -4 -15 -37 c-8 -20 -17 -38 -19 -40\n   -2 -2 -27 14 -56 35 l-53 39 -137 5 c-75 3 -140 8 -144 12 -4 4 4 16 17 27 21\n   18 39 20 142 21 136 0 176 12 207 62 18 29 20 50 20 186 0 83 2 152 6 152 3 0\n   32 -18 64 -40 66 -45 78 -48 87 -22 29 82 29 82 82 82 l51 0 0 -218z\"\n        />\n        <path d=\"M804 1026 c-10 -26 0 -51 21 -51 16 0 20 7 20 30 0 33 -30 49 -41 21z\" />\n        <path d=\"M914 1026 c-10 -26 0 -51 21 -51 16 0 20 7 20 30 0 33 -30 49 -41 21z\" />\n        <path\n          d=\"M813 913 c-8 -21 31 -53 66 -53 15 0 37 7 49 16 41 29 20 67 -25 43\n   -19 -10 -28 -10 -43 -1 -27 16 -39 15 -47 -5z\"\n        />\n        <path\n          d=\"M290 850 c-18 -11 -4 -42 17 -38 10 2 19 10 21 19 4 19 -19 31 -38\n   19z\"\n        />\n        <path\n          d=\"M249 703 c-114 -71 -52 -259 113 -344 50 -26 61 -24 121 14 124 80\n   178 198 132 287 -29 56 -113 77 -175 45 -27 -14 -33 -14 -60 0 -38 20 -98 19\n   -131 -2z m125 -58 l36 -24 36 24 c48 33 87 32 113 -1 46 -58 7 -150 -91 -217\n   l-56 -39 -39 25 c-116 74 -164 177 -108 232 31 32 63 32 109 0z\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport function CommunicationErrorSVG() {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"128.000000pt\"\n      height=\"128.000000pt\"\n      viewBox=\"0 0 128.000000 128.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        transform=\"translate(0.000000,128.000000) scale(0.100000,-0.100000)\"\n        fill=\"#000000\"\n        stroke=\"none\"\n      >\n        <path\n          d=\"M643 1230 c-78 -18 -93 -54 -93 -226 0 -126 -1 -136 -17 -129 -10 5\n   -58 10 -108 12 -75 4 -100 1 -146 -16 -121 -46 -206 -127 -250 -238 -41 -104\n   -27 -313 21 -313 24 0 24 -1 4 61 -56 169 51 384 223 449 67 26 177 31 236 11\n   l37 -13 0 -114 c0 -175 22 -204 154 -204 l79 0 -5 -63 c-17 -212 -217 -362\n   -435 -327 -66 10 -77 9 -154 -14 -46 -14 -85 -24 -87 -21 -2 2 5 34 16 71 21\n   69 19 87 -13 114 -25 21 -42 -3 -23 -31 13 -20 12 -30 -6 -90 -30 -104 -7\n   -118 126 -78 59 17 81 19 140 11 140 -18 262 21 354 113 29 28 61 70 73 93 26\n   50 51 144 51 189 l0 33 73 0 72 0 75 -80 c74 -78 91 -89 118 -71 15 9 31 70\n   32 117 0 23 6 34 25 42 14 6 34 26 45 44 19 31 20 51 20 308 0 255 -2 277 -20\n   307 -22 37 -41 48 -95 57 -45 7 -71 -4 -62 -28 4 -11 19 -16 46 -16 23 0 48\n   -8 62 -19 24 -19 24 -19 27 -283 2 -164 -1 -275 -7 -291 -6 -15 -23 -33 -38\n   -39 -38 -17 -40 -20 -48 -101 l-7 -72 -76 83 -77 83 -157 -1 c-151 0 -157 1\n   -172 22 -24 33 -24 563 0 596 15 21 20 22 200 22 160 0 185 2 191 16 3 9 0 20\n   -8 25 -17 11 -351 10 -396 -1z\"\n        />\n        <path\n          d=\"M884 1150 c-46 -19 -54 -46 -54 -183 0 -122 1 -129 25 -152 16 -17\n   35 -25 60 -25 25 0 44 8 60 25 24 23 25 29 25 154 0 121 -2 132 -22 155 -26\n   29 -63 39 -94 26z m64 -52 c15 -15 16 -221 2 -249 -12 -21 -50 -25 -68 -7 -17\n   17 -17 239 0 256 7 7 21 12 33 12 12 0 26 -5 33 -12z\"\n        />\n        <path\n          d=\"M875 758 c-50 -29 -60 -89 -22 -133 50 -58 147 -20 147 58 -1 66 -69\n   107 -125 75z m67 -45 c32 -29 16 -73 -27 -73 -42 0 -59 44 -29 74 20 20 33 20\n   56 -1z\"\n        />\n        <path\n          d=\"M190 403 c-51 -65 36 -149 98 -95 32 26 37 63 12 95 -30 37 -80 37\n   -110 0z\"\n        />\n        <path\n          d=\"M360 410 c-27 -27 -26 -71 3 -98 30 -28 68 -28 95 1 44 46 14 117\n   -48 117 -17 0 -39 -9 -50 -20z\"\n        />\n        <path\n          d=\"M521 404 c-27 -35 -26 -59 4 -89 45 -46 118 -19 118 43 0 69 -80 99\n   -122 46z\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import { styled } from \"@storybook/theming\";\n\nconst SpinnerContainer = styled.div({ textAlign: \"center\" });\n\nconst ImageContainer = styled.section(({ theme }) => ({\n  textAlign: \"center\",\n  color: theme.color.negative,\n}));\n\nexport { SpinnerContainer, ImageContainer };\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { ValidationError } from \"yup\";\n\nimport { FieldGroup } from \"@UI/FieldGroup\";\nimport { Textbox } from \"@UI/Textbox\";\nimport { Textarea } from \"@UI/Textarea\";\n\nimport { IComment } from \"@interfaces/comment\";\nimport { IDiscussionParameters } from \"@interfaces/supabase\";\n\nimport { useComment } from \"@hooks/useComment\";\n\nimport { transformComment } from \"@transformers/comment\";\n\nimport { validateComment } from \"./CommentFormSchema\";\n\nimport {\n  CommentBoxFormContainer,\n  CommentButtonsSectionContainer,\n} from \"./CommentBox.styles\";\n\ntype TCommentBoxProps = {\n  storyId: string;\n  setComment: (comment: IComment) => void;\n  paramData: IDiscussionParameters;\n};\n\nexport function CommentBox(props: TCommentBoxProps) {\n  const { storyId, setComment, paramData } = props;\n  const formRef = useRef<HTMLFormElement>(null);\n  //\n  const { isLoading, error, saveComment } = useComment(paramData);\n\n  const [formErrors, setFormErrors] = useState<{\n    [key: string]: string | null;\n  }>({});\n\n  useEffect(() => {\n    if (error) {\n      alert(error?.message);\n    }\n  }, [error]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { elements } = e.currentTarget;\n    const author = (elements.namedItem(\"author\") as HTMLInputElement).value;\n    const comment = (elements.namedItem(\"comment\") as HTMLInputElement).value;\n\n    const commentData: IComment = {\n      author: author.trim(),\n      comment: comment.trim(),\n      storyId,\n      createdAt: new Date().toISOString(),\n    };\n\n    try {\n      await validateComment(commentData);\n\n      // SAVE NEW COMMENT INTO DB\n      const response = await saveComment(commentData);\n      // success message\n\n      if (response.data) {\n        // SAVE NEW COMMENT INTO LOCAL STATE\n        setComment(transformComment(response.data));\n\n        // CLEAR FORM\n        formRef.current.reset();\n        formRef.current.scrollIntoView({ behavior: \"instant\" });\n      }\n    } catch (error) {\n      if (error instanceof ValidationError) {\n        const { path, message } = error;\n        setFormErrors({ [path as string]: message });\n      }\n    }\n  };\n\n  return (\n    <CommentBoxFormContainer onSubmit={handleSubmit} ref={formRef}>\n      <h3>Write your feedback / comment / question</h3>\n      <hr />\n      <FieldGroup name=\"author\" label=\"Author\" error={formErrors.author}>\n        <Textbox type=\"text\" required aria-label=\"Author Name\" />\n      </FieldGroup>\n      <FieldGroup name=\"comment\" label=\"Comment\" error={formErrors.comment}>\n        <Textarea rows={4} required aria-label=\"Comment\"></Textarea>\n      </FieldGroup>\n      <CommentButtonsSectionContainer>\n        <input type=\"reset\" value=\"Reset\" disabled={isLoading} />\n        <input type=\"submit\" value=\"Submit\" disabled={isLoading} />\n      </CommentButtonsSectionContainer>\n    </CommentBoxFormContainer>\n  );\n}\n","import React from \"react\";\n\nimport { FieldGroupContainer } from \"./FieldGroup.styles\";\n\ntype TFieldGroupProps = {\n  name: string;\n  label: string;\n  error?: string;\n  children: React.ReactElement;\n};\n\nexport function FieldGroup(props: TFieldGroupProps) {\n  const { name, label, children, error } = props;\n\n  return (\n    <FieldGroupContainer>\n      <label htmlFor={name}>\n        <b>{label}</b>\n      </label>\n      {React.cloneElement(children, { name })}\n      {error ? <span>{error}</span> : null}\n    </FieldGroupContainer>\n  );\n}\n","import { styled } from \"@storybook/theming\";\n\nconst FieldGroupContainer = styled.p(({ theme }) => ({\n  margin: 0,\n  label: {\n    display: \"block\",\n    margin: \"0.25rem\",\n  },\n  span: {\n    display: \"block\",\n    color: theme.color.warningText,\n  },\n}));\n\nexport { FieldGroupContainer };\n","import { styled } from \"@storybook/theming\";\n\nconst Textbox = styled.input(({ theme }) => ({\n  border: theme.input.border,\n  borderRadius: theme.input.borderRadius,\n  background: theme.input.background,\n  color: theme.input.color,\n  height: \"32px\",\n  width: \"100%\",\n  padding: \"5px\",\n}));\n\nexport { Textbox };\n","import { styled } from \"@storybook/theming\";\n\nconst Textarea = styled.textarea(({ theme }) => ({\n  border: theme.input.border,\n  borderRadius: theme.input.borderRadius,\n  background: theme.input.background,\n  color: theme.input.color,\n  borderColor: \"#3F4242\",\n  width: \"100%\",\n  padding: \"5px\",\n}));\n\nexport { Textarea };\n","import { useState, useMemo } from \"react\";\nimport { PostgrestError } from \"@supabase/supabase-js\";\n\nimport { Comment_V1_Service } from \"@services/supabase/service\";\nimport { IComment } from \"@interfaces/comment\";\nimport { IDiscussionParameters } from \"@interfaces/supabase\";\n\nexport function useComment(paramData: IDiscussionParameters) {\n  const service = useMemo(\n    () =>\n      new Comment_V1_Service(paramData.supabase.url, paramData.supabase.secret),\n    []\n  );\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<PostgrestError | null>(null);\n\n  const saveComment = async (comment: IComment) => {\n    setIsLoading(true);\n    const response = await service.insert(comment);\n\n    if (response.error) {\n      setError(response.error);\n    }\n\n    setIsLoading(false);\n\n    return response;\n  };\n\n  // const updateComment = async (comment: IComment) => {};\n\n  // const deleteComment = async (comment: IComment) => {};\n\n  return { isLoading, error, saveComment };\n}\n","import { SupabaseClient, createClient } from \"@supabase/supabase-js\";\n\nimport { Database } from \"@interfaces/supabase\";\n\nexport class SupabaseInstance {\n  private static dbInstance: SupabaseClient;\n\n  private constructor() {}\n\n  public static getDBInstance(url: string, secret: string): SupabaseClient {\n    if (!SupabaseInstance.dbInstance) {\n      SupabaseInstance.dbInstance = createClient<Database>(url, secret);\n    }\n\n    return SupabaseInstance.dbInstance;\n  }\n}\n","import {\n  SupabaseClient,\n  PostgrestResponse,\n  PostgrestSingleResponse,\n} from \"@supabase/supabase-js\";\n\nimport { IData } from \"@interfaces/base/IData\";\nimport { Database, Tables, TablesInsert, DbResult } from \"@interfaces/supabase\";\n\nimport { SupabaseInstance } from \"./instance\";\n\nexport class Comment_V1_Data\n  implements\n    IData<\n      Tables<\"comments_v1\">,\n      TablesInsert<\"comments_v1\">,\n      Promise<PostgrestSingleResponse<Tables<\"comments_v1\">>>,\n      Promise<PostgrestResponse<Tables<\"comments_v1\">>>\n    >\n{\n  private db: SupabaseClient<Database>;\n\n  constructor(url: string, secret: string) {\n    this.db = SupabaseInstance.getDBInstance(url, secret);\n  }\n\n  async insert(comment: TablesInsert<\"comments_v1\">) {\n    const query = this.db\n      .from(\"comments_v1\")\n      .insert(comment)\n      .select(\"*\")\n      .limit(1)\n      .single();\n\n    const insertedComment: DbResult<typeof query> = await query;\n\n    return insertedComment;\n  }\n\n  async update(comment: Tables<\"comments_v1\">) {\n    const query = this.db\n      .from(\"comments_v1\")\n      .update(comment)\n      .eq(\"id\", comment.id)\n      .select(\"*\")\n      .limit(1)\n      .single();\n\n    const updatedComment: DbResult<typeof query> = await query;\n\n    return updatedComment;\n  }\n\n  async delete(id: number) {\n    const query = this.db.from(\"comments_v1\").delete().eq(\"id\", id);\n\n    const updatedComment: DbResult<typeof query> = await query;\n\n    return updatedComment;\n  }\n\n  async getBy(columnName: string, value: string) {\n    const query = this.db.from(\"comments_v1\").select(\"*\").eq(columnName, value);\n\n    const comment: DbResult<typeof query> = await query;\n\n    return comment;\n  }\n\n  async getAll() {\n    const query = this.db.from(\"comments_v1\").select(\"*\");\n\n    const comment: DbResult<typeof query> = await query;\n\n    return comment;\n  }\n}\n","import {\n  PostgrestResponse,\n  PostgrestSingleResponse,\n} from \"@supabase/supabase-js\";\n\nimport { IService } from \"@interfaces/base/IService\";\nimport { IComment } from \"@interfaces/comment\";\nimport { Tables } from \"@interfaces/supabase\";\n\nimport { Comment_V1_Data } from \"./data\";\n\nexport class Comment_V1_Service\n  implements\n    IService<\n      Tables<\"comments_v1\">,\n      Promise<PostgrestSingleResponse<Tables<\"comments_v1\">>>,\n      Promise<PostgrestResponse<Tables<\"comments_v1\">>>\n    >\n{\n  private data: Comment_V1_Data;\n\n  constructor(url: string, secret: string) {\n    this.data = new Comment_V1_Data(url, secret);\n  }\n\n  async insert(data: IComment) {\n    return await this.data.insert({\n      author: data.author,\n      comment: data.comment,\n      createdat: data.createdAt,\n      storyid: data.storyId,\n    });\n  }\n\n  async update(comment: Tables<\"comments_v1\">) {\n    return await this.data.update(comment);\n  }\n\n  async delete(id: number) {\n    return await this.data.delete(id);\n  }\n\n  async getBy(columnName: keyof Tables<\"comments_v1\">, value: string) {\n    return await this.data.getBy(columnName, value);\n  }\n\n  async getAll() {\n    return await this.data.getAll();\n  }\n}\n","export function formatRawDateToFriendlyDate(date: string): string {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    dateStyle: \"medium\",\n    timeStyle: \"short\",\n  }).format(new Date(date));\n}\n","import { IComment } from \"@interfaces/comment\";\nimport { Tables } from \"@interfaces/supabase\";\n\nimport { formatRawDateToFriendlyDate } from \"@utils/date\";\n\nexport function transformComment(comment: Tables<\"comments_v1\">): IComment {\n  return {\n    id: comment.id,\n    author: comment.author,\n    storyId: comment.storyid,\n    comment: comment.comment,\n    createdAt: formatRawDateToFriendlyDate(comment.createdat),\n  };\n}\n","import { object, string } from \"yup\";\n\nimport { IComment } from \"@interfaces/comment\";\n\nconst commentSchema = object().shape({\n  author: string().required(\"Required\"),\n  comment: string().required(\"Required\"),\n  storyId: string().required(),\n  createdAt: string().required(),\n});\n\nexport function validateComment(comment: IComment) {\n  return commentSchema.validate(comment);\n}\n","import { styled } from \"@storybook/theming\";\n\nconst CommentBoxFormContainer = styled.form(({ theme }) => ({\n  padding: \"0.5rem\",\n  borderRadius: theme.appBorderRadius,\n  backgroundColor: theme.background.app,\n  color: theme.color.primary,\n\n  h3: {\n    margin: 0,\n    marginBottom: \"0.5rem\",\n  },\n\n  \">p\": {\n    marginBottom: \"0.5rem\",\n  },\n}));\n\nconst CommentButtonsSectionContainer = styled.section(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  gap: \"0.5rem\",\n  alignItems: \"center\",\n\n  \"input[type=submit]\": {\n    cursor: \"pointer\",\n    outline: 0,\n    padding: \"5px 16px\",\n    border: theme.input.border,\n    borderRadius: theme.input.borderRadius,\n    color: \"#ffffff\",\n    backgroundColor: \"#2ea44f\",\n    \":hover\": {\n      backgroundColor: \"#2c974b\",\n      transitionDuration: \"0.1s\",\n    },\n  },\n\n  \"input[type=reset]\": {\n    cursor: \"pointer\",\n    outline: 0,\n    padding: \"5px 16px\",\n    border: theme.input.border,\n    borderRadius: theme.input.borderRadius,\n    color: \"#24292e\",\n    backgroundColor: \"#fafbfc\",\n    \":hover\": {\n      backgroundColor: \"#f3f4f6\",\n      transitionDuration: \"0.1s\",\n    },\n  },\n}));\n\nexport { CommentBoxFormContainer, CommentButtonsSectionContainer };\n","import { useEffect, useState, useMemo } from \"react\";\nimport { PostgrestError } from \"@supabase/supabase-js\";\n\nimport { Comment_V1_Service } from \"@services/supabase/service\";\n\nimport { IComment } from \"@interfaces/comment\";\nimport { IDiscussionParameters, Tables } from \"@interfaces/supabase\";\n\nimport { transformComment } from \"@transformers/comment\";\n\nexport function useComments(storyId: string, paramData: IDiscussionParameters) {\n  const service = useMemo(\n    () =>\n      new Comment_V1_Service(paramData.supabase.url, paramData.supabase.secret),\n    []\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<PostgrestError | null>(null);\n  const [comments, setComments] = useState<Array<IComment>>([]);\n\n  // hide this and the interfaces in useHook\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const transformComments = (\n    comments: Array<Tables<\"comments_v1\">>\n  ): Array<IComment> => {\n    if (comments) {\n      return comments.map((comment) => transformComment(comment));\n    }\n\n    return [];\n  };\n\n  const fetchComments = async () => {\n    const response = await service.getBy(\"storyid\", storyId);\n\n    if (response.error) {\n      setError(response.error);\n    } else {\n      setComments(transformComments(response.data));\n    }\n\n    setIsLoading(false);\n  };\n\n  const setComment = async (comment: IComment) => {\n    setComments((comments) => [...comments, comment]);\n  };\n\n  return { isLoading, error, comments, setComment };\n}\n","import { styled } from \"@storybook/theming\";\n\nconst TabWrapper = styled.div(({ theme }) => ({\n  background: theme.background.content,\n  padding: \"4rem 20px\",\n  minHeight: \"100vh\",\n  boxSizing: \"border-box\",\n  position: \"relative\",\n}));\n\nconst TabInner = styled.div({\n  maxWidth: 768,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n});\n\nexport { TabWrapper, TabInner };\n"]}